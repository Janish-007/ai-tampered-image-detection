# Build and deploy Python app to Azure Web App - ai-tampered-image-detection

name: Build and deploy Python app to Azure Web App - ai-tampered-image-detection

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
      - name: Checkout (with LFS)
        uses: actions/checkout@v4
        with:
          lfs: true

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Create venv & install deps
        run: |
          python -m venv venv
          source venv/bin/activate
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Upload artifact for deployment
        uses: actions/upload-artifact@v4
        with:
          name: python-app
          path: |
            .
            !venv/
            !.git/
            !.github/workflows/
            **/__pycache__/

  deploy:
    runs-on: ubuntu-latest
    needs: build
    permissions:
      id-token: write
      contents: read

    env:
      APP_NAME: ai-tampered-image-detection
      RG_NAME: ark_ml_rg     # <-- change if your resource group is different

    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v4
        with:
          name: python-app

      - name: Login to Azure
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZUREAPPSERVICE_CLIENTID_F7480D7BFB474D63BEDF0D2246E4EEDC }}
          tenant-id: ${{ secrets.AZUREAPPSERVICE_TENANTID_4A455CB7571048DEBDCAB3BBB7872631 }}
          subscription-id: ${{ secrets.AZUREAPPSERVICE_SUBSCRIPTIONID_B5004FF9B6DD4545B65AC0EFAFFA50A2 }}

      # Helps avoid 409 conflicts from a previous build/deploy still running
      - name: Stop app (release locks)
        run: az webapp stop --name "$APP_NAME" --resource-group "$RG_NAME"

      - name: Create deployment zip
        run: |
          zip -r app.zip . -x "venv/*" ".git/*" ".github/*" "**/__pycache__/*"
          ls -lh app.zip

      # Retry is useful because App Service sometimes returns 409 right after a stop
      - name: Deploy with OneDeploy (synchronous, with retry)
        uses: nick-fields/retry@v3
        with:
          max_attempts: 3
          timeout_minutes: 20
          retry_on: error
          shell: bash
          command: |
            az webapp deploy \
              --resource-group "$RG_NAME" \
              --name "$APP_NAME" \
              --src-path app.zip \
              --type zip \
              --async false

      - name: Start app
        run: az webapp start --name "$APP_NAME" --resource-group "$RG_NAME"
