# ... keep your current build job as-is ...

  deploy:
    runs-on: ubuntu-latest
    needs: build
    permissions:
      id-token: write
      contents: read

    env:
      APP_NAME: ai-tampered-image-detection
      RG_NAME: ark_ml_rg        # <--- change if your resource group is different

    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v4
        with:
          name: python-app

      - name: Login to Azure
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZUREAPPSERVICE_CLIENTID_F7480D7BFB474D63BEDF0D2246E4EEDC }}
          tenant-id: ${{ secrets.AZUREAPPSERVICE_TENANTID_4A455CB7571048DEBDCAB3BBB7872631 }}
          subscription-id: ${{ secrets.AZUREAPPSERVICE_SUBSCRIPTIONID_B5004FF9B6DD4545B65AC0EFAFFA50A2 }}

      # helpful when a previous OneDeploy/Oryx build is still running/locked
      - name: Stop app (release file locks)
        run: az webapp stop --name "$APP_NAME" --resource-group "$RG_NAME"

      - name: Create deployment zip
        run: |
          zip -r app.zip . -x "venv/*" ".git/*" ".github/*" "**/__pycache__/*"
          ls -lh app.zip

      # Retry deploy up to 3 times in case the server still returns 409
      - name: Deploy via Azure CLI (OneDeploy, synchronous)
        uses: nick-fields/retry@v3
        with:
          max_attempts: 3
          timeout_minutes: 20
          retry_on: error
          shell: bash
          command: |
            az webapp deploy \
              --resource-group "$RG_NAME" \
              --name "$APP_NAME" \
              --src-path app.zip \
              --type zip \
              --async false

      - name: Start app
        run: az webapp start --name "$APP_NAME" --resource-group "$RG_NAME"
