name: Build and deploy Python app to Azure Web App - ai-tampered-image-detection

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
      # 1) Checkout WITH LFS
      - name: Checkout (with Git LFS)
        uses: actions/checkout@v4
        with:
          lfs: true
          fetch-depth: 0

      # 2) (Paranoid) make sure LFS objects are materialized
      - name: Fetch & checkout LFS objects
        run: |
          git lfs install
          git lfs fetch --all
          git lfs checkout
          ls -lh
          ls -lh weights || true

      # 3) Fail fast if the checkpoint is missing or still a pointer file
      - name: Verify weights file is real (not an LFS pointer)
        run: |
          set -e
          FILE="weights/iml_vit_checkpoint_casiav2.pth"
          if [ ! -f "$FILE" ]; then
            echo "::error::Missing weights file at $FILE"
            exit 1
          fi
          SIZE=$(stat -c%s "$FILE") || SIZE=0
          echo "Weights size: $((SIZE/1024/1024)) MB"
          head -c 512 "$FILE" | grep -qi "git-lfs" && {
            echo "::error::The weights file is a Git-LFS pointer. LFS objects were not downloaded."
            exit 1
          }
          # Optional: enforce a minimum size (e.g., > 100MB)
          if [ "$SIZE" -lt 100000000 ]; then
            echo "::error::Weights file looks too small; probably not the real checkpoint."
            exit 1
          fi

      # 4) Python is not needed for packaging, but keep if you want to run quick scripts
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      # (Optional) Skip installing deps here; App Service will do it on deploy.
      # - name: Create and start virtual environment
      #   run: |
      #     python -m venv venv
      #     source venv/bin/activate
      # - name: Install dependencies
      #   run: pip install -r requirements.txt

      # 5) Upload only what the app needs
      - name: Upload artifact for deployment
        uses: actions/upload-artifact@v4
        with:
          name: python-app
          path: |
            .
            !.git/**
            !.github/**
            !venv/**
            !**/__pycache__/**

  deploy:
    runs-on: ubuntu-latest
    needs: build
    permissions:
      id-token: write
      contents: read

    steps:
      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: python-app

      - name: Login to Azure
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZUREAPPSERVICE_CLIENTID_F7480D7BFB474D63BEDF0D2246E4EEDC }}
          tenant-id: ${{ secrets.AZUREAPPSERVICE_TENANTID_4A455CB7571048DEBDCAB3BBB7872631 }}
          subscription-id: ${{ secrets.AZUREAPPSERVICE_SUBSCRIPTIONID_B5004FF9B6DD4545B65AC0EFAFFA50A2 }}

      - name: Deploy to Azure Web App
        uses: azure/webapps-deploy@v3
        with:
          app-name: 'ai-tampered-image-detection'
          slot-name: 'Production'
